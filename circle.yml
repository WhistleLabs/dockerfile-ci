machine:
  environment:
    MAJOR_VERSION_TAG: 2
    PACKER_VERSION_TAG: 1.0.0
    TERRAFORM_VERSION_TAG: 0.10.7
    DOCKER_BIN_TAG: 'node-7.5.0'
    CI_CONTAINER_NAME: 'whistle-ci'
    TF_IMAGE: 'unifio/terraform'
    PKR_IMAGE: 'unifio/packer'
    CI_IMAGE_NAME: 'whistle/ci'
  services:
    - docker

dependencies:
  pre:
    - sudo apt-get update; sudo apt-get install -y jq curl
  cache_directories:
    - "~/docker"
  override:
    - docker info
    - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
    - >
      if [[ $(DOCKER_BIN_TAG="${TERRAFORM_VERSION_TAG}" ./tagexists.sh ${TF_IMAGE}) == "1" ]];then
        ./copybins.sh terraform && \
        echo terraform >> ~/.allbinaries
      fi
    - >
      if [[ $(DOCKER_BIN_TAG="${PACKER_VERSION_TAG}" ./tagexists.sh ${PKR_IMAGE}) == "1" ]];then
        ./copybins.sh packer && \
        echo packer >> ~/.allbinaries
      fi
    - >
      if [[ -e ~/docker/image.tar ]]; then
        docker load --input ~/docker/image.tar
      fi
    - docker build --rm=false -t "${CI_IMAGE_NAME}":latest .
    - mkdir -p ~/docker; docker save "${CI_IMAGE_NAME}":latest > ~/docker/image.tar
    - cat ~/.allbinaries

test:
  override:
    - docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "gem list | grep covalence"
    - docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "aws --version"
    - docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "ls -l /usr/local/bin/terraform-providers/linux_amd64"
    - docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "ls -l /aws/.terraform.d/plugins"
    - >
      if grep -q packer ~/.allbinaries; then
        docker run -e CHECKPOINT_DISABLE=1 \
          --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "packer version"
      fi
    - >
      if grep -q terraform ~/.allbinaries; then
        docker run -e CHECKPOINT_DISABLE=1 \
          --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "terraform version"
      fi
    - cat ~/.allbinaries
deployment:
  hub:
    branch: master
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - >
        IMAGE_TO_TAG=$(docker images | grep -E "${CI_IMAGE_NAME}" | grep -v "${DOCKER_BIN_TAG}" | awk '{print $3}')
        docker tag -f "${IMAGE_TO_TAG}" "${CI_IMAGE_NAME}":${PACKER_VERSION_TAG}.${TERRAFORM_VERSION_TAG}.${CIRCLE_BUILD_NUM}
        docker push "${CI_IMAGE_NAME}":${PACKER_VERSION_TAG}.${TERRAFORM_VERSION_TAG}.${CIRCLE_BUILD_NUM}
      - docker push "${CI_IMAGE_NAME}":latest
