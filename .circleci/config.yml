version: 2

jobs:
  build:
    docker:
      - image: alpine:3.7
    environment:
      MAJOR_VERSION_TAG: 2
      PACKER_VERSION_TAG: 1.0.0
      TERRAFORM_VERSION_TAG: 0.10.7
      TERRAFORM_PROVIDER_VERSION_TAG: 0.0.1
      NODE_VERSION_TAG: 7.5.0
      DOCKER_BIN_TAG: 'node-7.5.0'
      CI_CONTAINER_NAME: 'whistle-ci'
      TF_IMAGE: 'unifio/terraform'
      TF_PROVIDER_IMAGE: 'whistle/terraform-providers'
      PKR_IMAGE: 'unifio/packer'
      CI_IMAGE_NAME: 'whistle/ci'
      CI_NODE_IMAGE_NAME: 'whistle/ci:node-7.5.0'
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.10.0-ce
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              bash \
              curl \
              docker
      - save_cache:
          key: dependency-cache
          paths:
            - "~/docker"
      - run:
          name: docker info
          command: docker info
      - run:
          name: docker login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Copy Terraform
          command: |
            if [[ $(DOCKER_BIN_TAG="${TERRAFORM_VERSION_TAG}" ./tagexists.sh ${TF_IMAGE}) == "1" ]];then
              ./copybins.sh terraform && \
              echo terraform >> ~/.allbinaries
            fi
      - run:
          name: Copy Packer
          command: |
            if [[ $(DOCKER_BIN_TAG="${PACKER_VERSION_TAG}" ./tagexists.sh ${PKR_IMAGE}) == "1" ]];then
              ./copybins.sh packer && \
              echo packer >> ~/.allbinaries
            fi
      - run:
          name: Load docker image
          command: |
            if [[ -e ~/docker/image.tar ]]; then
              docker load --input ~/docker/image.tar
            fi
      - run:
          name: Docker Build
          command: docker build --rm=false -t "${CI_IMAGE_NAME}":latest .
      - run:
          name: Save build
          command: |
            mkdir -p ~/docker
            docker save "${CI_IMAGE_NAME}":latest > ~/docker/image.tar
      - run:
          name: Execute acceptance test
          command: |
            cat ~/.allbinaries
            docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "gem list | grep covalence"
            docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "aws --version"
            docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "ls -l /usr/local/bin/terraform-providers/linux_amd64"
            docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "ls -l /aws/.terraform.d/plugins"
            if grep -q packer ~/.allbinaries; then
              docker run -e CHECKPOINT_DISABLE=1 \
                --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "packer version"
            fi
            if grep -q terraform ~/.allbinaries; then
              docker run -e CHECKPOINT_DISABLE=1 \
                --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "terraform version"
            fi
      - deploy:
          name: Register CI image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              IMAGE_TO_TAG=$(docker images | grep -E "${CI_IMAGE_NAME}" | grep -v "${DOCKER_BIN_TAG}" | awk '{print $3}')
              docker tag -f "${IMAGE_TO_TAG}" "${CI_IMAGE_NAME}":${PACKER_VERSION_TAG}.${TERRAFORM_VERSION_TAG}.${CIRCLE_BUILD_NUM}
              docker push "${CI_IMAGE_NAME}":${PACKER_VERSION_TAG}.${TERRAFORM_VERSION_TAG}.${CIRCLE_BUILD_NUM}
            fi
