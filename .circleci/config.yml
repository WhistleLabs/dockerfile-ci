version: 2

jobs:
  build:
    docker:
      - image: alpine:3.7
    environment:
      MAJOR_VERSION_TAG: 2
      PACKER_VERSION_TAG: 1.1.0
      TERRAFORM_VERSION_TAG: 0.12.1
      CI_CONTAINER_NAME: 'whistle-ci'
      TF_IMAGE: 'unifio/terraform'
      PKR_IMAGE: 'unifio/packer'
      CI_IMAGE_NAME: 'whistle/ci'
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.10.0-ce
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              bash \
              curl \
              docker \
              jq
      - save_cache:
          key: dependency-cache
          paths:
            - "~/docker"
      - run:
          name: docker info
          command: docker info
      - run:
          name: docker login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Load docker image
          command: |
            if [[ -e ~/docker/image.tar ]]; then
              docker load --input ~/docker/image.tar
            fi
      - run:
          name: Docker Build
          command: docker build --rm=false -t "${CI_IMAGE_NAME}":latest .
      - run:
          name: Save build
          command: |
            mkdir -p ~/docker
            docker save "${CI_IMAGE_NAME}":latest > ~/docker/image.tar
      - run:
          name: Execute acceptance test
          command: |
            docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "gem list | grep covalence"
            docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "aws --version"
            docker run -e CHECKPOINT_DISABLE=1 --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "packer version"
            docker run -e CHECKPOINT_DISABLE=1 --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "terraform version"
            docker run --entrypoint /bin/sh "${CI_IMAGE_NAME}" -c "ls -l /usr/local/bin/terraform-providers/linux_amd64"
      - deploy:
          name: Register CI image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag "${CI_IMAGE_NAME}:latest" "${CI_IMAGE_NAME}":${PACKER_VERSION_TAG}.${TERRAFORM_VERSION_TAG}.${CIRCLE_BUILD_NUM}
              docker push "${CI_IMAGE_NAME}":${PACKER_VERSION_TAG}.${TERRAFORM_VERSION_TAG}.${CIRCLE_BUILD_NUM}
            fi
